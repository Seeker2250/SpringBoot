대체 왜 port 문제가 ViewResolver 문제로 뜨는가...

1. controller.MainController.java 추가
	/index -> /index.html 요청 처리

2. 	jpa 사용 설정
SQL문 작성 -> preparedStatement.execute()~~ 이제 이거 필요없음
insert into question (id, subject, content) values (1, '안녕하세요', '가입 인사드립니다 ^^');
insert into question (id, subject, content) values (2, '질문 있습니다', 'ORM이 궁금합니다');

ORM에서는 Entity -> DB 연동
Question Entity class
	Question q1 = new Question();
	q1.setSubject("안녕하세요");
	q1.setContent("가입 인사드립니다 ^^");
	this.question[Repository].save(q1);
	JPA API save() method
	
3. H2 database 설치 및  사용
	개발용 사용
	Java 기반 경량 DBMS
	이거로 빠르게 개발, 나중엔 진짜 운영 DBMS(Oracle, MySQL, MSSQL 등)에 올리기
	build.gradle에 module 추가
		runtimeOnly 'com.h2database:h2'
		
4. 설치한 H2를 사용하기 위한 설정

spring.h2.console.enabled=true
h2콘솔에 접속할 수 있게 할 지 말 지
웹 UI 제공
(오라클 설치 후 오라클 접속하기 위한 sql developer 같은 역할, web으로 들어가는 것)

spring.h2.console.path=/h2-console
h2 콘솔 접속 경로

spring.datasource.url=jdbc:h2:~/local
DB에 접속하기 위한 경로, ~는 사용자 경로(C\USER\사용자명), local이 db 이름
~ 사용자의 홈 디렉토리 안에
local.mv.db 데이터베이스 파일 생성
copy con local.mv.db
^Z
파일 복사 완료

spring.datasource.driverClassName=org.h2.Driver
driver class 이름

spring.datasource.username=sa
사용할 계정 이름
spring.datasource.password=
그 계정 비번(지금은 안 줄거야)

JPA 환경 설정
h2 db 설치 + 데이터 저장할 수 있는 파일 생성
프로그램 jpa 사용하여
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
gradle에 represh gradle 주의

질문(Question) 테이블
속성 		 	  이름    설명
-------------------------------------------
id   		 	  질문 	  데이터의 고유 번호
subject   	  질문 	  데이터의 제목
content   	  질문 	  데이터의 내용
createDate   질문 	  데이터를 작성한 일시

답변 테이블(Answer) 테이블
id				  답변  데이터의 고유 번호
question		  질문  데이터 (어떤 질문의 답변인지 알아야 하므로 이 속성이 필요하다.) Question 테이블의 pk를 가져오므로 여기에서는 fk일 것
content		  답변  데이터의 내용
createDate	  답변  데이터를 작성한 일시

질문과 관련된 entity, 답변과 관련된 entity를 생성하면 돼

question package와 answer package로 나눌 것


Hibernate:
	create table question (
	id integer generated by default as identity,
	content TEXT,
	create_date timestamp(6),
	subject varchar(200),
	primary key (id)
	)
	
	

질문 entity, 답변 entity 생성
question 패키지
answer 패키지

CRUD Repository(DAO와 같은 포지션, DB와 연결)

JUnit 설치~

Repository
CrudRepository
PagingAndSortRepository
JpaRepository
이 순서로 상속 및 구현